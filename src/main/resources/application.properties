quarkus.datasource.jdbc.db-kind=postgresql
# for the line to work, you need to add a system variable with a value (do not delete / change, otherwise the docker image will not work!)
quarkus.datasource.username=${DB_USER}
quarkus.datasource.password=${DB_PASS}
# for the line to work, you need to add a system variable with a value (do not delete / change, otherwise the docker image will not work!)
quarkus.datasource.jdbc.url=${DB_URL}
# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=none
#5050
# Flyway minimal config properties
quarkus.flyway.migrate-at-start=true

# Flyway optional config properties
 quarkus.flyway.baseline-on-migrate=true
 quarkus.flyway.baseline-version=1.0.0
 quarkus.flyway.baseline-description=Initial version
 quarkus.flyway.connect-retries=5
 quarkus.flyway.schemas=public
 #quarkus.flyway.table=flyway_quarkus_history
 quarkus.flyway.locations=db/migration
# quarkus.flyway.sql-migration-prefix=X
# quarkus.flyway.repeatable-sql-migration-prefix=K

# Jwt authentication configuration
mp.jwt.verify.publickey.location=publicKey.pem
# for the line to work, you need to add a system variable with a value (do not delete / change, otherwise the docker image will not work!)
mp.jwt.verify.issuer=${KEYCLOAK_ISSUER}
quarkus.native.resources.includes=publicKey.pem

# for the line to work, you need to add a system variable with a value (do not delete / change, otherwise the docker image will not work!)
mp.messaging.outgoing.notifications.bootstrap.servers=${KAFKA_URL}
mp.messaging.outgoing.notifications.topic=notifications
mp.messaging.outgoing.notifications.connector=smallrye-kafka
mp.messaging.outgoing.notifications.value.serializer=com.vega.notifications.kafka.NotificationSerializer

scheduled.time=1m

quarkus.http.cors=true
quarkus.http.cors.origins=${UI_URL}
quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with
quarkus.http.cors.exposed-headers=X-Total-Count
quarkus.http.cors.methods=GET, PUT, DELETE, POST

# quarkus.http.port=8090